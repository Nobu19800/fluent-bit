name: Build and run integration tests for PR
on:
  pull_request:
    branches:
      - master
    types:
      - labeled
      - opened
      - edited
      - reopened
      - synchronize
jobs:
  pr-integration-test-build:
    name: PR - integration build
    # We only need to test this once as the rest are chained from it.
    if: contains(github.event.pull_request.labels.*.name, 'ok-to-test')
    uses: fluent/fluent-bit/.github/workflows/call-integration-image-build.yaml@master
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      registry: ghcr.io
      username: ${{ github.actor }}
      image: ${{ github.repository }}
      image-tag: x86_64-master-pr-${{ github.event.number }}
      environment: integration
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  pr-integration-test-image-smoke:
    name: PR - test image is valid
    needs: pr-integration-test-build
    runs-on: ubuntu-latest
    environment: integration
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.username }}
          password: ${{ secrets.token }}

      - name: Test the HTTP server is responding
        timeout-minutes: 5
        run: |
          packaging/testing/smoke/container/container-smoke-test.sh
        shell: bash
        env:
          CONTAINER_NAME: local-smoke-pr-${{ github.event.number }}
          CONTAINER_ARCH: linux/amd64
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
          IMAGE_TAG: x86_64-master-pr-${{ github.event.number }}

  pr-integration-test-build-complete:
    name: PR - build complete
    runs-on: ubuntu-latest
    needs: pr-integration-test-image-smoke
    steps:
      - uses: actions-ecosystem/action-add-labels@v1
        name: Label the PR
        with:
          labels: ci/integration-docker-ok
          github_token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}

      - name: Upload the image just in case as an artefact
        run: |
          docker pull $IMAGE
          docker save --output /tmp/pr-image.tar $IMAGE
        env:
          IMAGE: ghcr.io/${{ github.repository }}:x86_64-master-pr-${{ github.event.pull_request.number }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pr-${{ github.event.pull_request.number }}-image
          path: /tmp/pr-image.tar
          if-no-files-found: error

  pr-integration-test-run-integration-gcp:
    name: PR - GCP integration test
    needs: pr-integration-test-image-run
    uses: calyptia/fluent-bit-ci/.github/workflows/reusable-integration-test-gcp.yaml@main
    with:
      image_name: ghcr.io/${{ github.repository }}
      image_tag: x86_64-master-pr-${{ github.event.pull_request.number }}
    secrets:
      grafana_username: ${{ secrets.GRAFANA_USERNAME }}
      terraform_api_token: ${{ secrets.TF_API_TOKEN }}
      gcp_service_account_key: ${{ secrets.GCP_SA_KEY }}
      grafana_password: ${{ secrets.GRAFANA_PASSWORD }}

  pr-integration-test-run-integration-post-label:
    name: PR - test complete
    runs-on: ubuntu-latest
    needs: pr-integration-test-run-integration-gcp
    steps:
      - uses: actions-ecosystem/action-add-labels@v1
        name: Label the PR
        with:
          labels: ci/integration-test-gcp-ok
          github_token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          repo: fluent/fluent-bit
